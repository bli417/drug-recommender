{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-logger\";\nimport * as i2 from \"../../services/symptom/symptom.service\";\nimport * as i3 from \"../../services/recommend/recommend.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/chips\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/material/card\";\nimport * as i12 from \"@angular/material/icon\";\nfunction InputsComponent_mat_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const symptom_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", symptom_r12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", symptom_r12.name, \" \");\n  }\n}\nfunction InputsComponent_mat_hint_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\");\n    i0.ɵɵtext(1, \"Loading symptoms...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InputsComponent_mat_hint_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\");\n    i0.ɵɵtext(1, \"Select your primary symptom\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InputsComponent_mat_chip_row_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 14);\n    i0.ɵɵlistener(\"removed\", function InputsComponent_mat_chip_row_20_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const medicine_r13 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.removeDaily(medicine_r13));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 15)(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const medicine_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", medicine_r13, \" \");\n  }\n}\nfunction InputsComponent_mat_chip_row_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 14);\n    i0.ɵɵlistener(\"removed\", function InputsComponent_mat_chip_row_29_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const allergy_r16 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.removeAllergy(allergy_r16));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 15)(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const allergy_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", allergy_r16, \" \");\n  }\n}\nfunction InputsComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"error\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r7.errorMessage);\n  }\n}\nfunction InputsComponent_mat_icon_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"search\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InputsComponent_mat_icon_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 17);\n    i0.ɵɵtext(1, \"sync\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InputsComponent_span_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Find Recommendations\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InputsComponent_span_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Searching...\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [13, 188];\n};\nexport let InputsComponent = /*#__PURE__*/(() => {\n  class InputsComponent {\n    constructor(logger, symptomService, recommendService) {\n      this.logger = logger;\n      this.symptomService = symptomService;\n      this.recommendService = recommendService;\n      this.recommended = new EventEmitter();\n      this.symptoms = [];\n      this.dailyMedicines = [];\n      this.allergies = [];\n      this.selectedSymptom = null;\n      this.isLoading = false;\n      this.errorMessage = '';\n    }\n    ngOnInit() {\n      this.loadSymptoms();\n    }\n    loadSymptoms() {\n      this.symptomService.getSymptoms().subscribe(symptoms => {\n        this.symptoms = symptoms;\n        this.logger.debug('Loaded symptoms:', symptoms);\n      }, error => {\n        this.errorMessage = 'Failed to load symptoms. Please try again later.';\n        this.logger.error('Error loading symptoms:', error);\n      });\n    }\n    addDaily(event) {\n      const value = (event.value || '').trim();\n      if (value) {\n        this.dailyMedicines.push(value);\n        event.input.value = '';\n      }\n    }\n    removeDaily(medicine) {\n      const index = this.dailyMedicines.indexOf(medicine);\n      if (index >= 0) {\n        this.dailyMedicines.splice(index, 1);\n      }\n    }\n    addAllergy(event) {\n      const value = (event.value || '').trim();\n      if (value) {\n        this.allergies.push(value);\n        event.input.value = '';\n      }\n    }\n    removeAllergy(allergy) {\n      const index = this.allergies.indexOf(allergy);\n      if (index >= 0) {\n        this.allergies.splice(index, 1);\n      }\n    }\n    search(symptom) {\n      if (!symptom) {\n        this.logger.warn('No symptom selected');\n        return;\n      }\n      this.isLoading = true;\n      this.errorMessage = '';\n      this.selectedSymptom = symptom;\n      this.logger.debug('Searching for symptom:', symptom);\n      this.logger.debug('Daily medicines:', this.dailyMedicines);\n      this.logger.debug('Allergies:', this.allergies);\n      this.recommendService.recommend(symptom.name, this.dailyMedicines, this.allergies).subscribe(drug => {\n        this.logger.debug('Recommended drug:', drug);\n        this.recommended.emit(drug);\n        this.isLoading = false;\n      }, error => {\n        this.logger.error('Error getting recommendation:', error);\n        this.errorMessage = 'Failed to get drug recommendation. Please try again later.';\n        this.isLoading = false;\n      });\n    }\n  }\n  InputsComponent.ɵfac = function InputsComponent_Factory(t) {\n    return new (t || InputsComponent)(i0.ɵɵdirectiveInject(i1.NGXLogger), i0.ɵɵdirectiveInject(i2.SymptomService), i0.ɵɵdirectiveInject(i3.RecommendService));\n  };\n  InputsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InputsComponent,\n    selectors: [[\"app-inputs\"]],\n    outputs: {\n      recommended: \"recommended\"\n    },\n    decls: 40,\n    vars: 18,\n    consts: [[1, \"inputs-container\"], [\"appearance\", \"outline\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"chipGrid\", \"\"], [3, \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Add medicine (press Enter)...\", 3, \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputTokenEnd\"], [\"allergyGrid\", \"\"], [\"placeholder\", \"Add allergy (press Enter)...\", 3, \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputTokenEnd\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [\"class\", \"rotating\", 4, \"ngIf\"], [3, \"value\"], [3, \"removed\"], [\"matChipRemove\", \"\"], [1, \"error-message\"], [1, \"rotating\"]],\n    template: function InputsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\")(2, \"mat-card-header\")(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Find Drug Recommendations\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-card-subtitle\");\n        i0.ɵɵtext(6, \"Enter your symptoms and medical information\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"mat-card-content\")(8, \"mat-form-field\", 1)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Select a symptom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-select\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function InputsComponent_Template_mat_select_ngModelChange_11_listener($event) {\n          return ctx.selectedSymptom = $event;\n        });\n        i0.ɵɵtemplate(12, InputsComponent_mat_option_12_Template, 2, 2, \"mat-option\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, InputsComponent_mat_hint_13_Template, 2, 0, \"mat-hint\", 4);\n        i0.ɵɵtemplate(14, InputsComponent_mat_hint_14_Template, 2, 0, \"mat-hint\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-form-field\", 1)(16, \"mat-label\");\n        i0.ɵɵtext(17, \"Daily Medicines\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-chip-grid\", null, 5);\n        i0.ɵɵtemplate(20, InputsComponent_mat_chip_row_20_Template, 5, 1, \"mat-chip-row\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 7);\n        i0.ɵɵlistener(\"matChipInputTokenEnd\", function InputsComponent_Template_input_matChipInputTokenEnd_21_listener($event) {\n          return ctx.addDaily($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-hint\");\n        i0.ɵɵtext(23, \"Enter medications you take regularly\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"mat-form-field\", 1)(25, \"mat-label\");\n        i0.ɵɵtext(26, \"Allergies\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"mat-chip-grid\", null, 8);\n        i0.ɵɵtemplate(29, InputsComponent_mat_chip_row_29_Template, 5, 1, \"mat-chip-row\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"input\", 9);\n        i0.ɵɵlistener(\"matChipInputTokenEnd\", function InputsComponent_Template_input_matChipInputTokenEnd_30_listener($event) {\n          return ctx.addAllergy($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"mat-hint\");\n        i0.ɵɵtext(32, \"Enter any drug allergies you have\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(33, InputsComponent_div_33_Template, 5, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"mat-card-actions\")(35, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function InputsComponent_Template_button_click_35_listener() {\n          return ctx.search(ctx.selectedSymptom);\n        });\n        i0.ɵɵtemplate(36, InputsComponent_mat_icon_36_Template, 2, 0, \"mat-icon\", 4);\n        i0.ɵɵtemplate(37, InputsComponent_mat_icon_37_Template, 2, 0, \"mat-icon\", 12);\n        i0.ɵɵtemplate(38, InputsComponent_span_38_Template, 2, 0, \"span\", 4);\n        i0.ɵɵtemplate(39, InputsComponent_span_39_Template, 2, 0, \"span\", 4);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(19);\n        const _r5 = i0.ɵɵreference(28);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedSymptom);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.symptoms);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.symptoms.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.symptoms.length > 0);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dailyMedicines);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matChipInputFor\", _r3)(\"matChipInputSeparatorKeyCodes\", i0.ɵɵpureFunction0(16, _c0));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allergies);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matChipInputFor\", _r5)(\"matChipInputSeparatorKeyCodes\", i0.ɵɵpureFunction0(17, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.selectedSymptom || ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.NgControlStatus, i5.NgModel, i6.MatChipGrid, i6.MatChipInput, i6.MatChipRemove, i6.MatChipRow, i7.MatFormField, i7.MatLabel, i7.MatHint, i8.MatButton, i9.MatSelect, i10.MatOption, i11.MatCard, i11.MatCardActions, i11.MatCardContent, i11.MatCardHeader, i11.MatCardSubtitle, i11.MatCardTitle, i12.MatIcon],\n    styles: [\".search[_ngcontent-%COMP%]{margin-top:2em}.search[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:20%;padding-left:.5em}.search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{text-transform:uppercase;margin-left:2em}mat-option[_ngcontent-%COMP%]{text-transform:capitalize}.inputs-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;padding:2rem;max-width:800px;margin:0 auto}.inputs-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]{box-shadow:0 4px 15px #00000014!important;border-radius:8px;overflow:hidden}.inputs-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]{background-color:#f5f5f5;padding:20px;margin-bottom:10px}.inputs-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%]{font-size:20px;margin-bottom:8px;color:#3f51b5}.inputs-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]   mat-card-subtitle[_ngcontent-%COMP%]{font-size:14px;color:#666}.inputs-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1.5rem;padding:20px}.inputs-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   mat-card-actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;padding:16px 20px}.inputs-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   mat-card-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;font-weight:500;padding:8px 16px;height:auto}.inputs-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:100%}.inputs-container[_ngcontent-%COMP%]   mat-chip-grid[_ngcontent-%COMP%]{width:100%}.inputs-container[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;color:#f44336;background-color:#ffebee;padding:12px 16px;border-radius:4px;font-size:14px}.inputs-container[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{font-size:20px;height:20px;width:20px}.rotating[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_spin 1.5s linear infinite}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}\"]\n  });\n  return InputsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}