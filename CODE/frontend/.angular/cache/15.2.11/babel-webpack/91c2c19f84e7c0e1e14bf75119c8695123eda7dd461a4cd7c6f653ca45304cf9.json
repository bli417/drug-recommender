{"ast":null,"code":"import { shareReplay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-logger\";\nexport let DrugService = /*#__PURE__*/(() => {\n  class DrugService {\n    constructor(http, api, logger) {\n      this.http = http;\n      this.api = api;\n      this.logger = logger;\n      this.CACHE_SIZE = 2;\n      this.cache$ = new Map();\n    }\n    /**\r\n     * Get drug detail from cache; If not find in cache, get it from backend\r\n     * @param name String representation of drug name\r\n     */\n    get(name) {\n      this.logger.debug(`DrugService.get: Attempt to retrieve data from cache using generic name (${name.genericName}) and brand name (${name.brandName}).`);\n      const key = `?generic=${name.genericName}&brand=${name.brandName}`;\n      if (!this.cache$.has(key)) {\n        this.logger.debug(`DrugService.get: Unable to find data for ${key} in cache, retrieving data from API.`);\n        this.cache$.set(key, this.requestDrugDetails(name).pipe(shareReplay(this.CACHE_SIZE)));\n      }\n      return this.cache$.get(key);\n    }\n    // Get drug detail for the given name from backend\n    requestDrugDetails(name) {\n      return this.http.get(`${this.api}multi/?generic=${name.genericName}&brand=${name.brandName}`);\n    }\n  }\n  DrugService.ɵfac = function DrugService_Factory(t) {\n    return new (t || DrugService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('API'), i0.ɵɵinject(i2.NGXLogger));\n  };\n  DrugService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DrugService,\n    factory: DrugService.ɵfac,\n    providedIn: 'root'\n  });\n  return DrugService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}