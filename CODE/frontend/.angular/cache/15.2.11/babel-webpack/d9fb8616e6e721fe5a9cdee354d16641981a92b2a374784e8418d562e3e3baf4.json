{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-logger\";\nimport * as i2 from \"../../services/symptom/symptom.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/chips\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/icon\";\nfunction InputsComponent_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const symptom_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", symptom_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", symptom_r5.name, \" \");\n  }\n}\nfunction InputsComponent_mat_chip_row_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 10);\n    i0.ɵɵlistener(\"removed\", function InputsComponent_mat_chip_row_11_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const medicine_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.removeDaily(medicine_r6));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 11)(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const medicine_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", medicine_r6, \" \");\n  }\n}\nfunction InputsComponent_mat_chip_row_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 10);\n    i0.ɵɵlistener(\"removed\", function InputsComponent_mat_chip_row_18_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const allergy_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.removeAllergy(allergy_r9));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 11)(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const allergy_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", allergy_r9, \" \");\n  }\n}\nconst _c0 = function () {\n  return [13, 188];\n};\nexport let InputsComponent = /*#__PURE__*/(() => {\n  class InputsComponent {\n    constructor(logger, symptomService) {\n      this.logger = logger;\n      this.symptomService = symptomService;\n      this.recommended = new EventEmitter();\n      this.symptoms = [];\n      this.dailyMedicines = [];\n      this.allergies = [];\n      this.selectedSymptom = null;\n    }\n    ngOnInit() {\n      this.loadSymptoms();\n    }\n    loadSymptoms() {\n      this.symptomService.getSymptoms().subscribe(symptoms => {\n        this.symptoms = symptoms;\n        this.logger.debug('Loaded symptoms:', symptoms);\n      }, error => {\n        this.logger.error('Error loading symptoms:', error);\n      });\n    }\n    addDaily(event) {\n      const value = (event.value || '').trim();\n      if (value) {\n        this.dailyMedicines.push(value);\n        event.input.value = '';\n      }\n    }\n    removeDaily(medicine) {\n      const index = this.dailyMedicines.indexOf(medicine);\n      if (index >= 0) {\n        this.dailyMedicines.splice(index, 1);\n      }\n    }\n    addAllergy(event) {\n      const value = (event.value || '').trim();\n      if (value) {\n        this.allergies.push(value);\n        event.input.value = '';\n      }\n    }\n    removeAllergy(allergy) {\n      const index = this.allergies.indexOf(allergy);\n      if (index >= 0) {\n        this.allergies.splice(index, 1);\n      }\n    }\n    search(symptom) {\n      this.selectedSymptom = symptom;\n      this.logger.debug('Searching for symptom:', symptom);\n      this.logger.debug('Daily medicines:', this.dailyMedicines);\n      this.logger.debug('Allergies:', this.allergies);\n      // TODO: Implement search logic\n    }\n  }\n\n  InputsComponent.ɵfac = function InputsComponent_Factory(t) {\n    return new (t || InputsComponent)(i0.ɵɵdirectiveInject(i1.NGXLogger), i0.ɵɵdirectiveInject(i2.SymptomService));\n  };\n  InputsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InputsComponent,\n    selectors: [[\"app-inputs\"]],\n    outputs: {\n      recommended: \"recommended\"\n    },\n    decls: 20,\n    vars: 10,\n    consts: [[1, \"inputs-container\"], [\"appearance\", \"outline\"], [3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"chipGrid\", \"\"], [3, \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"New medicine...\", 3, \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputTokenEnd\"], [\"allergyGrid\", \"\"], [\"placeholder\", \"New allergy...\", 3, \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputTokenEnd\"], [3, \"value\"], [3, \"removed\"], [\"matChipRemove\", \"\"]],\n    template: function InputsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Select a symptom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-select\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function InputsComponent_Template_mat_select_ngModelChange_4_listener($event) {\n          return ctx.selectedSymptom = $event;\n        })(\"selectionChange\", function InputsComponent_Template_mat_select_selectionChange_4_listener($event) {\n          return ctx.search($event.value);\n        });\n        i0.ɵɵtemplate(5, InputsComponent_mat_option_5_Template, 2, 2, \"mat-option\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"mat-form-field\", 1)(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Daily Medicines\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-chip-grid\", null, 4);\n        i0.ɵɵtemplate(11, InputsComponent_mat_chip_row_11_Template, 5, 1, \"mat-chip-row\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 6);\n        i0.ɵɵlistener(\"matChipInputTokenEnd\", function InputsComponent_Template_input_matChipInputTokenEnd_12_listener($event) {\n          return ctx.addDaily($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"mat-form-field\", 1)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Allergies\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-chip-grid\", null, 7);\n        i0.ɵɵtemplate(18, InputsComponent_mat_chip_row_18_Template, 5, 1, \"mat-chip-row\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 8);\n        i0.ɵɵlistener(\"matChipInputTokenEnd\", function InputsComponent_Template_input_matChipInputTokenEnd_19_listener($event) {\n          return ctx.addAllergy($event);\n        });\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(10);\n        const _r3 = i0.ɵɵreference(17);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedSymptom);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.symptoms);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dailyMedicines);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matChipInputFor\", _r1)(\"matChipInputSeparatorKeyCodes\", i0.ɵɵpureFunction0(8, _c0));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allergies);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matChipInputFor\", _r3)(\"matChipInputSeparatorKeyCodes\", i0.ɵɵpureFunction0(9, _c0));\n      }\n    },\n    dependencies: [i3.NgForOf, i4.NgControlStatus, i4.NgModel, i5.MatChipGrid, i5.MatChipInput, i5.MatChipRemove, i5.MatChipRow, i6.MatFormField, i6.MatLabel, i7.MatSelect, i8.MatOption, i9.MatIcon],\n    styles: [\".search[_ngcontent-%COMP%]{margin-top:2em}.search[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:20%;padding-left:.5em}.search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{text-transform:uppercase;margin-left:2em}mat-option[_ngcontent-%COMP%]{text-transform:capitalize}.inputs-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1rem;padding:1rem;max-width:600px;margin:0 auto}.inputs-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:100%}.inputs-container[_ngcontent-%COMP%]   mat-chip-grid[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return InputsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}