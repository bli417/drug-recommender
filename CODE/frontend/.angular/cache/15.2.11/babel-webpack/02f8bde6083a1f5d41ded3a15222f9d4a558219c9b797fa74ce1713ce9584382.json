{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { NGXLogger } from 'ngx-logger';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-logger\";\nvar RecommendService = /** @class */function () {\n  function RecommendService(http, api, logger) {\n    this.http = http;\n    this.api = api;\n    this.logger = logger;\n  }\n  /**\r\n   * Return the most recommended medicine base on user inputs\r\n   * @param symptom string representation of user's symptom\r\n   * @param dailies List of user's daily medicines\r\n   * @param allergies List of user's allergies\r\n   */\n  RecommendService.prototype.recommend = function (symptom, dailies, allergies) {\n    this.logger.debug(\"RecommendService.recommend: Search drug for \".concat(symptom, \" with daily medicines (\").concat(dailies, \") and allergies (\").concat(allergies, \").\"));\n    return this.http.get(\"\".concat(this.api, \"?symptom=\").concat(symptom, \"&interactions=\") + (dailies.length === 0 ? '' : \"\".concat(dailies)) + '&ingredient=' + (allergies.length === 0 ? '' : \"\".concat(allergies)));\n  };\n  RecommendService.ɵfac = function RecommendService_Factory(t) {\n    return new (t || RecommendService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('API'), i0.ɵɵinject(i2.NGXLogger));\n  };\n  RecommendService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RecommendService,\n    factory: RecommendService.ɵfac,\n    providedIn: 'root'\n  });\n  return RecommendService;\n}();\nexport { RecommendService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}